.in 
.decl AssignHeapAllocation(x: number, y: number, z: number) 
.decl Method_DeclaringType(src: number, dest: number) 
.decl HeapAllocation_Type(src: number, dest: number) 
.decl ThisVar(src: number, dest: number) 

.printsize 
.decl HeapAllocationTypeAppearsInMultipleClasses(type: number)


.rule
# ArrayIndexPointsTo(baseheap, heap) :-
#   Reachable(inmethod),
#   StoreArrayIndex(from, base, inmethod),
#   VarPointsTo(baseheap, base),
#   VarPointsTo(heap, from),
#   HeapAllocation_Type(heap, heaptype),
#   HeapAllocation_Type(baseheap, baseheaptype),
#   ComponentType(baseheaptype, componenttype),
#   SupertypeOf(componenttype, heaptype).
  # !neg(baseheap, heaptype),
  # from < base, componenttype != 3.
# .optimize

VarPointsTo(heap, this) :-
  Reachable(inMethod),
  Instruction_Method(invocation, inMethod),
  VirtualMethodInvocation_Base(invocation, base),
  VarPointsTo(heap, base),
  HeapAllocation_Type(heap, heaptype),
  VirtualMethodInvocation_SimpleName(invocation, simplename),
  VirtualMethodInvocation_Descriptor(invocation, descriptor),
  MethodLookup(simplename, descriptor, heaptype, toMethod),
  ThisVar(toMethod, this).
# .optimize

Assign(actual, formal) :-
  FormalParam(index, method, formal),
  ActualParam(index, invocation, actual),
  CallGraphEdge(invocation, method).
.optimize