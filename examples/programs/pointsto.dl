.in 
.decl PrimitiveAssign(source: number, dest: number) 
.decl Load(base: number, dest: number, field: number) 
.decl Store(source: number, base: number, field: number) 
.decl AssignAlloc(var: number, heap: number) 

.printsize 
.decl VarPointsTo(var: number, heap: number) 

.rule
Assign(var1, var2) :- 
  PrimitiveAssign(var1,var2). 

Alias(instanceVar, iVar) :- VarPointsTo(instanceVar, instanceHeap), VarPointsTo(iVar, instanceHeap).

VarPointsTo(var, heap) :-
  AssignAlloc(var, heap). 

VarPointsTo(var1, heap) :-
  Assign(var2, var1), 
  VarPointsTo(var2, heap).

Assign(var1, var2) :- 
  Alias(instanceVar2, instanceVar1),
  # VarPointsTo(instanceVar2, instanceHeap), VarPointsTo(instanceVar1, instanceHeap).
  Load(instanceVar1, var2, field),
  Store(var1, instanceVar2, field).
  