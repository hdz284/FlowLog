.in
.decl DirectSuperclass(subclass:number, superclass:number)
.decl DirectSuperinterface(type:number, superinterface:number)

# cp HeapAllocation_Type.csv HeapAllocationType.facts
# cp ReturnVar.csv ReturnVar.facts
# cp Var-Type.facts VarType.facts
# cp StoreInstanceField.csv StoreInstanceFieldIndex.facts
# cp LoadInstanceField.csv LoadInstanceFieldIndex.facts
# cp AssignCast.csv AssignCastIndex.facts
# cp AssignLocal.csv AssignLocalIndex.facts
# cp AssignHeapAllocation.csv AssignHeapAllocationIndex.facts

.decl HeapAllocationType(heapAllocation:number, allocationType:number)

.decl ThisVar(method:number, thisVariable:number)
.decl ReturnVar(returnVariable:number, method:number)

.decl SpecialMethodInvocation(callsite:number, index:number, calledMethod:number, base:number, method:number)
.decl StaticMethodInvocation(callsite:number, index:number, calledMethod:number, method:number)
.decl VirtualMethodInvocation(callsite:number, index:number, calledMethod:number, base:number, method:number)

.decl VarType(variable:number, type:number)
.decl FormalParam(index:number, containingMethod:number, variable:number)
.decl ActualParam(index:number, callsite:number, actualVariable:number)
.decl AssignReturnValue(callsite:number, variableAssignedTo:number)
.decl AssignCastIndex(castType:number, variableCast:number, variableAssignedTp:number, containingMethod:number)
.decl AssignLocalIndex(variableAssigned:number, variableAssignedTo:number, containingMethod:number)
.decl AssignHeapAllocationIndex(heapAllocation:number, variableAssignedTo:number, containingMethod:number)

.decl LoadInstanceFieldIndex(instanceVariable:number, field:number, variableAssignedTo:number, containingMethod:number)
.decl StoreInstanceFieldIndex(storedVariable:number, instanceVariable:number, field:number, containingMethod:number)

.printsize
.decl InstanceVar(instanceVariable:number)
.decl Superclass(subclass:number, superclass:number)
.decl Supertype(subtype:number, supertype:number)
.decl Invocation(callsite:number, calledMethod:number)
.decl InvocationBase(callsite:number, instanceVariable:number)

.decl InstanceVarType(variable:number, type:number)
.decl InstanceTypes(type:number)
.decl IsInstanceTypeCompatible(subclass:number, superclass:number)
.decl InstanceTypeComparable(subclass:number, superclass:number)

.decl ComparableInstanceVar(variable:number, variable2:number)
.decl Assign(varAssigned:number, varAssignedTo:number)

.decl VarPointsTo(variable:number, heapAllocation:number)

.decl InstanceVarPointsTo(variable:number, heapAllocation:number)
.decl LoadInstanceVarPointsTo(variable:number, heapAllocation:number)
.decl StoreInstanceVarPointsTo(variable:number, heapAllocation:number)
.decl Alias(v1:number, v2:number)

.decl AliasHelpUp(v1:number, v2:number, t:number)
.decl AliasHelpDown(v1:number, v2:number)

.decl VarPointsToUp(v1:number, v2:number, t:number)
.decl VarPointsToDown(v1:number, v2:number)


.rule
InstanceVar(var) :- LoadInstanceFieldIndex(var, _, _, _).
InstanceVar(var) :- StoreInstanceFieldIndex(_, var, _, _).

Superclass(sub, super) :- DirectSuperclass(sub, super).
Superclass(sub, super) :- Superclass(sub, x), DirectSuperclass(x, super).

Supertype(sub, super) :- Superclass(sub, super).
Supertype(type, interface) :- DirectSuperinterface(type, interface).

Invocation(callsite, calledMethod) :- SpecialMethodInvocation(callsite, _, calledMethod, _, _).
Invocation(callsite, calledMethod) :- StaticMethodInvocation(callsite, _, calledMethod, _).
Invocation(callsite, calledMethod) :- VirtualMethodInvocation(callsite, _, calledMethod, _, _).
InvocationBase(callsite, var) :- VirtualMethodInvocation(callsite, _, _, var, _).
InvocationBase(callsite, var) :- SpecialMethodInvocation(callsite, _, _, var, _).

InstanceVarType(var, type) :- VarType(var, type), InstanceVar(var).
InstanceTypes(x) :- Supertype(x, _), InstanceVarType(_, x).
InstanceTypes(x) :- Supertype(_, x), InstanceVarType(_, x).

IsInstanceTypeCompatible(sub, super) :- Supertype(sub, super).
IsInstanceTypeCompatible(t, t) :- InstanceTypes(t).

InstanceTypeComparable(type1, type2) :- IsInstanceTypeCompatible(type1, type2).
InstanceTypeComparable(type1, type2) :- IsInstanceTypeCompatible(type2, type1).

ComparableInstanceVar(var1, var2) :-
 InstanceVarType(var1, type1),
 InstanceVarType(var2, type2),
 InstanceTypeComparable(type1, type2).

Assign(localVarAssigned, localVarAssignedTo) :- AssignLocalIndex(localVarAssigned, localVarAssignedTo, _).

# three path
Assign(base, this) :- 
  InvocationBase(callsite, base), 
  Invocation(callsite, method), 
  ThisVar(method, this).

# three path
# Assign(actualParam, formalParam) :- 
#  Invocation(callsite, method), 
#  FormalParam(index, method, formalParam), 
#  ActualParam(index, callsite, actualParam).

Assign(actualParam, formalParam) :- 
  FormalParam(index, method, formalParam), 
  ActualParam(index, callsite, actualParam),
  Invocation(callsite, method).


# three path
Assign(returnVar, localVar) :- 
  ReturnVar(returnVar, method), 
  Invocation(callsite, method), 
  AssignReturnValue(callsite, localVar).




# .output VarPointsTo()
VarPointsTo(var, heap)  :-
  AssignHeapAllocationIndex(heap, var, _).

VarPointsTo(var1, heap) :-
  Assign(var2, var1),
  VarPointsTo(var2, heap).

VarPointsTo(var1, heap) :-
#  AssignCastIndex(type, var2, var1, _),
#  VarPointsTo(var2, heap),
  VarPointsToUp(var1, heap, type),
  HeapAllocationType(heap, type).

VarPointsToUp(var1, heap, varType) :- AssignCastIndex(varType, var2, var1, _), VarPointsTo(var2, heap).
VarPointsToDown(heap, varType) :- HeapAllocationType(heap, heapType), Supertype(heapType, varType).

VarPointsTo(var1, heap) :-
  VarPointsToUp(var1, heap, varType),
  VarPointsToDown(heap, varType).

InstanceVarPointsTo(var1, var2) :-
  InstanceVar(var1),
  VarPointsTo(var1, var2).

LoadInstanceVarPointsTo(var, heap)  :-
  InstanceVarPointsTo(var, heap),
  LoadInstanceFieldIndex(var, _, _, _).

StoreInstanceVarPointsTo(var, heap) :-
  InstanceVarPointsTo(var, heap),
  StoreInstanceFieldIndex(_, var, _, _).

AliasHelpUp(v1, v2, t2) :- StoreInstanceVarPointsTo(v2, h), InstanceVarType(v2, t2), LoadInstanceVarPointsTo(v1, h).
AliasHelpDown(v1, t2) :- InstanceVarType(v1, t1), InstanceTypeComparable(t1, t2).
Alias(v1, v2) :-
  AliasHelpUp(v1, v2, t2),
  AliasHelpDown(v1, t2).

Assign(storedVar, varAssignedTo) :-
  StoreInstanceFieldIndex(storedVar, iStoreVar, field, _),
  LoadInstanceFieldIndex(iLoadVar, field, varAssignedTo, _),
  Alias(iLoadVar, iStoreVar).
